From 1a630c1189a1eadbd0c8abc33523eca7d8d54000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20Gapi=C5=84ski?= <mike@gapinski.eu>
Date: Sat, 2 Mar 2024 14:51:38 +0000
Subject: [PATCH 09/10] Virtual Touchscreen: configurable X/Y params

---
 .../input/touchscreen/virtual_touchscreen.c    | 18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)

diff --git a/drivers/input/touchscreen/virtual_touchscreen.c b/drivers/input/touchscreen/virtual_touchscreen.c
index 553d48cd0..24c50b7bf 100644
--- a/drivers/input/touchscreen/virtual_touchscreen.c
+++ b/drivers/input/touchscreen/virtual_touchscreen.c
@@ -1,5 +1,6 @@
 #include <linux/input.h>
 #include <linux/input/mt.h>
+#include <linux/moduleparam.h>
 #include <linux/module.h>
 #include <linux/init.h>
 #include <linux/interrupt.h>
@@ -24,8 +25,11 @@ static ssize_t device_write(struct file *, const char *, size_t, loff_t *);
 static int Major;            /* Major number assigned to our device driver */
 static int Device_Open = 0;  /* Is device open?  Used to prevent multiple access to the device */
 
-static int ABS_X_MAX = 1024;
-static int ABS_Y_MAX = 768;
+#define INT_MODULE_PARM(n, v) static int n = v; module_param(n, int, 0)
+
+INT_MODULE_PARM(abs_x_max_param, 1024);
+INT_MODULE_PARM(abs_y_max_param, 768);
+
 
 struct class * cl;
 struct device * dev;
@@ -50,16 +54,16 @@ static int __init virt_ts_init(void)
 	virt_ts_dev->evbit[0] = BIT_MASK(EV_ABS) | BIT_MASK(EV_KEY);
 	virt_ts_dev->keybit[BIT_WORD(BTN_TOUCH)] = BIT_MASK(BTN_TOUCH);
 
-	input_set_abs_params(virt_ts_dev, ABS_X, ABS_X_MIN, ABS_X_MAX, 0, 0);
-	input_set_abs_params(virt_ts_dev, ABS_Y, ABS_Y_MIN, ABS_Y_MAX, 0, 0);
+	input_set_abs_params(virt_ts_dev, ABS_X, ABS_X_MIN, abs_x_max_param, 0, 0);
+	input_set_abs_params(virt_ts_dev, ABS_Y, ABS_Y_MIN, abs_y_max_param, 0, 0);
 
 	virt_ts_dev->name = "Virtual touchscreen";
 	virt_ts_dev->phys = "virtual_ts/input0";
 
         input_mt_init_slots(virt_ts_dev, MAX_CONTACTS, INPUT_MT_DIRECT);
 
-	input_set_abs_params(virt_ts_dev, ABS_MT_POSITION_X, ABS_X_MIN, ABS_X_MAX, 0, 0);
-	input_set_abs_params(virt_ts_dev, ABS_MT_POSITION_Y, ABS_Y_MIN, ABS_Y_MAX, 0, 0);
+	input_set_abs_params(virt_ts_dev, ABS_MT_POSITION_X, ABS_X_MIN, abs_x_max_param, 0, 0);
+	input_set_abs_params(virt_ts_dev, ABS_MT_POSITION_Y, ABS_Y_MIN, abs_y_max_param, 0, 0);
 
 	err = input_register_device(virt_ts_dev);
 	if (err)
@@ -232,6 +236,4 @@ module_exit(virt_ts_exit);
 
 MODULE_AUTHOR("Vitaly Shukela(vi0oss@gmail.com, Michał Gapiński (Tesla Android Project)");
 MODULE_DESCRIPTION("Virtual touchscreen driver");
-MODULE_PARM_DESC(ABS_X_MAX, "Maximum X coordinate for touchscreen");
-MODULE_PARM_DESC(ABS_Y_MAX, "Maximum Y coordinate for touchscreen");
 MODULE_LICENSE("GPL");
-- 
2.34.1

