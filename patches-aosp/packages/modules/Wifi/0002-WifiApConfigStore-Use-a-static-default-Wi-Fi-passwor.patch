From 41a40db5ec4a9e38de203dbffb0d678d7d05bec6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Micha=C5=82=20Gapin=CC=81ski?= <mike@gapinski.eu>
Date: Mon, 4 Jul 2022 04:58:36 +0200
Subject: [PATCH 2/4] WifiApConfigStore: Use a static default Wi-Fi password
 instead of a geneerated one
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I9588928ef7ca98c5d17c55c65ce3d63d0f6c20e9
Signed-off-by: Michał Gapiński <mike@gapinski.eu>
---
 .../server/wifi/WifiApConfigStore.java        | 24 ++++++-------------
 1 file changed, 7 insertions(+), 17 deletions(-)

diff --git a/service/java/com/android/server/wifi/WifiApConfigStore.java b/service/java/com/android/server/wifi/WifiApConfigStore.java
index f4d0622..ed7d10a 100644
--- a/service/java/com/android/server/wifi/WifiApConfigStore.java
+++ b/service/java/com/android/server/wifi/WifiApConfigStore.java
@@ -296,7 +296,7 @@ public class WifiApConfigStore {
                 || config.getSecurityType()
                 == SECURITY_TYPE_WPA3_SAE_TRANSITION)) {
             try {
-                configBuilder.setPassphrase(generatePassword(),
+                configBuilder.setPassphrase(getDefaultPassword(),
                         SECURITY_TYPE_WPA2_PSK);
             } catch (IllegalArgumentException e) {
                 Log.wtf(TAG, "Generated password was invalid: " + e);
@@ -430,10 +430,10 @@ public class WifiApConfigStore {
                 R.string.wifi_tether_configure_ssid_default) + "_" + getRandomIntForDefaultSsid());
         try {
             if (ApConfigUtil.isWpa3SaeSupported(mContext)) {
-                configBuilder.setPassphrase(generatePassword(),
+                configBuilder.setPassphrase(getDefaultPassword(),
                         SECURITY_TYPE_WPA3_SAE_TRANSITION);
             } else {
-                configBuilder.setPassphrase(generatePassword(),
+                configBuilder.setPassphrase(getDefaultPassword(),
                         SECURITY_TYPE_WPA2_PSK);
             }
         } catch (IllegalArgumentException e) {
@@ -502,10 +502,10 @@ public class WifiApConfigStore {
             configBuilder.setAutoShutdownEnabled(false);
             try {
                 if (ApConfigUtil.isWpa3SaeSupported(context)) {
-                    configBuilder.setPassphrase(generatePassword(),
+                    configBuilder.setPassphrase(getDefaultPassword(),
                             SECURITY_TYPE_WPA3_SAE_TRANSITION);
                 } else {
-                    configBuilder.setPassphrase(generatePassword(),
+                    configBuilder.setPassphrase(getDefaultPassword(),
                             SECURITY_TYPE_WPA2_PSK);
                 }
             } catch (IllegalArgumentException e) {
@@ -708,18 +708,8 @@ public class WifiApConfigStore {
         return true;
     }
 
-    private static String generatePassword() {
-        // Characters that will be used for password generation. Some characters commonly known to
-        // be confusing like 0 and O excluded from this list.
-        final String allowed = "23456789abcdefghijkmnpqrstuvwxyz";
-        final int passLength = 15;
-
-        StringBuilder sb = new StringBuilder(passLength);
-        SecureRandom random = new SecureRandom();
-        for (int i = 0; i < passLength; i++) {
-            sb.append(allowed.charAt(random.nextInt(allowed.length())));
-        }
-        return sb.toString();
+    private static String getDefaultPassword() {
+        return "changeit";
     }
 
     /**
-- 
2.34.1

